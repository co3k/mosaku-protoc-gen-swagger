---
swagger: "2.0"
info:
  version: "version not set"
  title: "shelves.proto"
schemes:
- "http"
- "https"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /v1/{book.name}:
    patch:
      tags:
      - "LibraryService"
      operationId: "UpdateBook"
      parameters:
      - name: "book.name"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "BookName"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/v1Book"
        x-exportParamName: "Body"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/v1Book"
  /v1/{name}:
    get:
      tags:
      - "LibraryService"
      operationId: "GetBook"
      parameters:
      - name: "name"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/v1Book"
    delete:
      tags:
      - "LibraryService"
      operationId: "DeleteBook"
      parameters:
      - name: "name"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Name"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/protobufEmpty"
  /v1/{parent}/books:
    post:
      tags:
      - "LibraryService"
      operationId: "CreateBook"
      parameters:
      - name: "parent"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Parent"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/v1Book"
        x-exportParamName: "Body"
      responses:
        200:
          description: ""
          schema:
            $ref: "#/definitions/v1Book"
definitions:
  protobufEmpty:
    type: "object"
    title: "A generic empty message that you can re-use to avoid defining duplicated\n\
      empty messages in your APIs. A typical example is to use it as the request\n\
      or the response type of an API method. For instance:"
    description: "service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n\
      \    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`."
  v1Book:
    type: "object"
    properties:
      name:
        type: "string"
        description: "Resource name of the book. It must have the format of \"shelves/*/books/*\"\
          .\nFor example: \"shelves/shelf1/books/book2\"."
    example:
      name: "name"
  v1ListBooksResponse:
    type: "object"
    properties:
      books:
        type: "array"
        description: "The field name should match the noun \"books\" in the method\
          \ name.  There\nwill be a maximum number of items returned based on the\
          \ page_size field\nin the request."
        items:
          $ref: "#/definitions/v1Book"
      next_page_token:
        type: "string"
        description: "Token to retrieve the next page of results, or empty if there\
          \ are no\nmore results in the list."
